import type { TranslationKey } from "../i18n/translations";

export class ItemsDef {
  public static readonly fontItemsDef = [
    {
      labelKey: 'defaultFontName' as TranslationKey,
      type: 'text',
      internalID: 'DefaultFamily',
      internalGroup: 'Font',
    },
    {
      labelKey: 'controlFont' as TranslationKey,
      type: 'number',
      internalID: 'Control',
      internalGroup: 'Font',
    },
    {
      labelKey: 'editControlFont' as TranslationKey,
      type: 'text',
      internalID: 'EditControl',
      internalGroup: 'Font',
    },
    {
      labelKey: 'previewTimeFont' as TranslationKey,
      type: 'number',
      internalID: 'PreviewTime',
      internalGroup: 'Font',
    },
    {
      labelKey: 'layerObjectFont' as TranslationKey,
      type: 'number',
      internalID: 'LayerObject',
      internalGroup: 'Font',
    },
    {
      labelKey: 'timeGaugeFont' as TranslationKey,
      type: 'number',
      internalID: 'TimeGauge',
      internalGroup: 'Font',
    },
    {
      labelKey: 'levelMeterFont' as TranslationKey,
      type: 'number',
      internalID: 'LevelMeter',
      internalGroup: 'Font',
    },
    {
      labelKey: 'footerFont' as TranslationKey,
      type: 'number',
      internalID: 'Footer',
      internalGroup: 'Font',
    },
    {
      labelKey: 'textEditFont' as TranslationKey,
      type: 'text',
      internalID: 'TextEdit',
      internalGroup: 'Font',
    },
    {
      labelKey: 'logFont' as TranslationKey,
      type: 'text',
      internalID: 'Log',
      internalGroup: 'Font',
    },
  ];

  public static readonly colorItemsDef = [
    {
      labelKey: 'backgroundColor' as TranslationKey,
      type: 'color',
      internalID: 'Background',
      internalGroup: 'Color',
    },
    {
      labelKey: 'windowBorderColor' as TranslationKey,
      type: 'color',
      internalID: 'WindowBorder',
      internalGroup: 'Color',
    },
    {
      labelKey: 'windowSeparatorColor' as TranslationKey,
      type: 'color',
      internalID: 'WindowSeparator',
      internalGroup: 'Color',
    },
    {
      labelKey: 'footerBackgroundColor' as TranslationKey,
      type: 'color',
      internalID: 'Footer',
      internalGroup: 'Color',
    },
    {
      labelKey: 'footerProgressColor' as TranslationKey,
      type: 'color',
      internalID: 'FooterProgress',
      internalGroup: 'Color',
    },
    {
      labelKey: 'groupingColor' as TranslationKey,
      type: 'color',
      internalID: 'Grouping',
      internalGroup: 'Color',
    },
    {
      labelKey: 'groupingHoverColor' as TranslationKey,
      type: 'color',
      internalID: 'GroupingHover',
      internalGroup: 'Color',
    },
    {
      labelKey: 'groupingSelectColor' as TranslationKey,
      type: 'color',
      internalID: 'GroupingSelect',
      internalGroup: 'Color',
    },
    {
      labelKey: 'titleHeaderColor' as TranslationKey,
      type: 'color',
      internalID: 'TitleHeader',
      internalGroup: 'Color',
    },
    {
      labelKey: 'borderSelectColor' as TranslationKey,
      type: 'color',
      internalID: 'BorderSelect',
      internalGroup: 'Color',
    },
    {
      labelKey: 'borderColor' as TranslationKey,
      type: 'color',
      internalID: 'Border',
      internalGroup: 'Color',
    },
    {
      labelKey: 'borderFocusColor' as TranslationKey,
      type: 'color',
      internalID: 'BorderFocus',
      internalGroup: 'Color',
    },
    {
      labelKey: 'textColor' as TranslationKey,
      type: 'color',
      internalID: 'Text',
      internalGroup: 'Color',
    },
    {
      labelKey: 'textDisableColor' as TranslationKey,
      type: 'color',
      internalID: 'TextDisable',
      internalGroup: 'Color',
    },
    {
      labelKey: 'textSelectColor' as TranslationKey,
      type: 'color',
      internalID: 'TextSelect',
      internalGroup: 'Color',
    },
    {
      labelKey: 'buttonBodyColor' as TranslationKey,
      type: 'color',
      internalID: 'ButtonBody',
      internalGroup: 'Color',
    },
    {
      labelKey: 'buttonBodyHoverColor' as TranslationKey,
      type: 'color',
      internalID: 'ButtonBodyHover',
      internalGroup: 'Color',
    },
    {
      labelKey: 'buttonBodyPressColor' as TranslationKey,
      type: 'color',
      internalID: 'ButtonBodyPress',
      internalGroup: 'Color',
    },
    {
      labelKey: 'buttonBodyDisableColor' as TranslationKey,
      type: 'color',
      internalID: 'ButtonBodyDisable',
      internalGroup: 'Color',
    },
    {
      labelKey: 'buttonBodySelectColor' as TranslationKey,
      type: 'color',
      internalID: 'ButtonBodySelect',
      internalGroup: 'Color',
    },
    {
      labelKey: 'sliderColor' as TranslationKey,
      type: 'color',
      internalID: 'SliderCursor',
      internalGroup: 'Color',
    },
    {
      labelKey: 'trackBarRangeColor' as TranslationKey,
      type: 'color',
      internalID: 'TrackBarRange',
      internalGroup: 'Color',
    },
    {
      labelKey: 'zoomGaugeColor' as TranslationKey,
      type: 'color',
      internalID: 'ZoomGauge',
      internalGroup: 'Color',
    },
    {
      labelKey: 'zoomGaugeHoverColor' as TranslationKey,
      type: 'color',
      internalID: 'ZoomGaugeHover',
      internalGroup: 'Color',
    },
    {
      labelKey: 'zoomGaugeOffColor' as TranslationKey,
      type: 'color',
      internalID: 'ZoomGaugeOff',
      internalGroup: 'Color',
    },
    {
      labelKey: 'zoomGaugeOffHoverColor' as TranslationKey,
      type: 'color',
      internalID: 'ZoomGaugeOffHover',
      internalGroup: 'Color',
    },
    {
      labelKey: 'frameRangeSelectColor' as TranslationKey,
      type: 'color',
      internalID: 'FrameRangeSelect',
      internalGroup: 'Color',
    },
    {
      labelKey: 'frameRangeOutsideColor' as TranslationKey,
      type: 'color',
      internalID: 'FrameRangeOutside',
      internalGroup: 'Color',
    },
    {
      labelKey: 'frameCursorColor' as TranslationKey,
      type: 'color',
      internalID: 'FrameCursor',
      internalGroup: 'Color',
    },
    {
      labelKey: 'frameCursorWideColor' as TranslationKey,
      type: 'color',
      internalID: 'FrameCursorWide',
      internalGroup: 'Color',
    },
    {
      labelKey: 'playerCursorColor' as TranslationKey,
      type: 'color',
      internalID: 'PlayerCursor',
      internalGroup: 'Color',
    },
    {
      labelKey: 'guideLineColor' as TranslationKey,
      type: 'color',
      internalID: 'GuideLine',
      internalGroup: 'Color',
    },
    {
      labelKey: 'gridLineColor' as TranslationKey,
      type: 'color',
      internalID: 'GridLine',
      internalGroup: 'Color',
    },
    {
      labelKey: 'layerBackgroundColor' as TranslationKey,
      type: 'color',
      internalID: 'Layer',
      internalGroup: 'Color',
    },
    {
      labelKey: 'layerHeaderBackgroundColor' as TranslationKey,
      type: 'color',
      internalID: 'LayerHeader',
      internalGroup: 'Color',
    },
    {
      labelKey: 'layerHoverColor' as TranslationKey,
      type: 'color',
      internalID: 'LayerHover',
      internalGroup: 'Color',
    },
    {
      labelKey: 'layerDisableColor' as TranslationKey,
      type: 'color',
      internalID: 'LayerDisable',
      internalGroup: 'Color',
    },
    {
      labelKey: 'layerRangeBackgroundColor' as TranslationKey,
      type: 'color',
      internalID: 'LayerRange',
      internalGroup: 'Color',
    },
    {
      labelKey: 'layerRangeFrameColor' as TranslationKey,
      type: 'color',
      internalID: 'LayerRangeFrame',
      internalGroup: 'Color',
    },
    {
      labelKey: 'objectVideoColor' as TranslationKey,
      type: 'color',
      internalID: 'ObjectVideo',
      internalGroup: 'Color',
    },
    {
      labelKey: 'objectVideoSelectColor' as TranslationKey,
      type: 'color',
      internalID: 'ObjectVideoSelect',
      internalGroup: 'Color',
    },
    {
      labelKey: 'objectAudioColor' as TranslationKey,
      type: 'color',
      internalID: 'ObjectAudio',
      internalGroup: 'Color',
    },
    {
      labelKey: 'objectAudioSelectColor' as TranslationKey,
      type: 'color',
      internalID: 'ObjectAudioSelect',
      internalGroup: 'Color',
    },
    {
      labelKey: 'objectControlColor' as TranslationKey,
      type: 'color',
      internalID: 'ObjectControl',
      internalGroup: 'Color',
    },
    {
      labelKey: 'objectControlSelectColor' as TranslationKey,
      type: 'color',
      internalID: 'ObjectControlSelect',
      internalGroup: 'Color',
    },
    {
      labelKey: 'objectVideoFilterColor' as TranslationKey,
      type: 'color',
      internalID: 'ObjectVideoFilter',
      internalGroup: 'Color',
    },
    {
      labelKey: 'objectVideoFilterSelectColor' as TranslationKey,
      type: 'color',
      internalID: 'ObjectVideoFilterSelect',
      internalGroup: 'Color',
    },
    {
      labelKey: 'objectAudioFilterColor' as TranslationKey,
      type: 'color',
      internalID: 'ObjectAudioFilter',
      internalGroup: 'Color',
    },
    {
      labelKey: 'objectAudioFilterSelectColor' as TranslationKey,
      type: 'color',
      internalID: 'ObjectAudioFilterSelect',
      internalGroup: 'Color',
    },
    {
      labelKey: 'objectHoverColor' as TranslationKey,
      type: 'color',
      internalID: 'ObjectHover',
      internalGroup: 'Color',
    },
    {
      labelKey: 'objectFocusColor' as TranslationKey,
      type: 'color',
      internalID: 'ObjectFocus',
      internalGroup: 'Color',
    },
    {
      labelKey: 'objectSectionColor' as TranslationKey,
      type: 'color',
      internalID: 'ObjectSection',
      internalGroup: 'Color',
    },
    {
      labelKey: 'objectWaveformColor' as TranslationKey,
      type: 'color',
      internalID: 'ObjectWaveform',
      internalGroup: 'Color',
    },
    {
      labelKey: 'clippingObjectColor' as TranslationKey,
      type: 'color',
      internalID: 'ClippingObject',
      internalGroup: 'Color',
    },
    {
      labelKey: 'clippingObjectMaskColor' as TranslationKey,
      type: 'color',
      internalID: 'ClippingObjectMask',
      internalGroup: 'Color',
    },
    {
      labelKey: 'anchorColor' as TranslationKey,
      type: 'color',
      internalID: 'Anchor',
      internalGroup: 'Color',
    },
    {
      labelKey: 'anchorLineColor' as TranslationKey,
      type: 'color',
      internalID: 'AnchorLine',
      internalGroup: 'Color',
    },
    {
      labelKey: 'anchorInColor' as TranslationKey,
      type: 'color',
      internalID: 'AnchorIn',
      internalGroup: 'Color',
    },
    {
      labelKey: 'anchorOutColor' as TranslationKey,
      type: 'color',
      internalID: 'AnchorOut',
      internalGroup: 'Color',
    },
    {
      labelKey: 'anchorHoverColor' as TranslationKey,
      type: 'color',
      internalID: 'AnchorHover',
      internalGroup: 'Color',
    },
    {
      labelKey: 'anchorSelectColor' as TranslationKey,
      type: 'color',
      internalID: 'AnchorSelect',
      internalGroup: 'Color',
    },
    {
      labelKey: 'anchorEdgeColor' as TranslationKey,
      type: 'color',
      internalID: 'AnchorEdge',
      internalGroup: 'Color',
    },
    {
      labelKey: 'centerGroupColor' as TranslationKey,
      type: 'color',
      internalID: 'CenterGroup',
      internalGroup: 'Color',
    },
    {
      labelKey: 'handleXColor' as TranslationKey,
      type: 'color',
      internalID: 'HandleX',
      internalGroup: 'Color',
    },
    {
      labelKey: 'handleYColor' as TranslationKey,
      type: 'color',
      internalID: 'HandleY',
      internalGroup: 'Color',
    },
    {
      labelKey: 'handleZColor' as TranslationKey,
      type: 'color',
      internalID: 'HandleZ',
      internalGroup: 'Color',
    },
    {
      labelKey: 'handleXHoverColor' as TranslationKey,
      type: 'color',
      internalID: 'HandleXHover',
      internalGroup: 'Color',
    },
    {
      labelKey: 'handleYHoverColor' as TranslationKey,
      type: 'color',
      internalID: 'HandleYHover',
      internalGroup: 'Color',
    },
    {
      labelKey: 'handleZHoverColor' as TranslationKey,
      type: 'color',
      internalID: 'HandleZHover',
      internalGroup: 'Color',
    },
    {
      labelKey: 'outsideDisplayColor' as TranslationKey,
      type: 'color',
      internalID: 'OutsideDisplay',
      internalGroup: 'Color',
    },
    {
      labelKey: 'levelMeterRedColor' as TranslationKey,
      type: 'color',
      internalID: 'LevelMeterRed',
      internalGroup: 'Color',
    },
    {
      labelKey: 'levelMeterYellowColor' as TranslationKey,
      type: 'color',
      internalID: 'LevelMeterYellow',
      internalGroup: 'Color',
    },
    {
      labelKey: 'levelMeterGreenColor' as TranslationKey,
      type: 'color',
      internalID: 'LevelMeterGreen',
      internalGroup: 'Color',
    },
  ];

  public static readonly layoutItemsDef = [
    {
      labelKey: 'windowSeparatorSize' as TranslationKey,
      type: 'number',
      internalID: 'WindowSeparatorSize',
      internalGroup: 'Layout',
    },
    {
      labelKey: 'scrollBarSize' as TranslationKey,
      type: 'number',
      internalID: 'ScrollBarSize',
      internalGroup: 'Layout',
    },
    {
      labelKey: 'footerHeight' as TranslationKey,
      type: 'number',
      internalID: 'FooterHeight',
      internalGroup: 'Layout',
    },
    {
      labelKey: 'titleHeaderHeight' as TranslationKey,
      type: 'number',
      internalID: 'TitleHeaderHeight',
      internalGroup: 'Layout',
    },
    {
      labelKey: 'timeGaugeHeight' as TranslationKey,
      type: 'number',
      internalID: 'TimeGaugeHeight',
      internalGroup: 'Layout',
    },
    {
      labelKey: 'layerHeight' as TranslationKey,
      type: 'number',
      internalID: 'LayerHeight',
      internalGroup: 'Layout',
    },
    {
      labelKey: 'layerHeaderWidth' as TranslationKey,
      type: 'number',
      internalID: 'LayerHeaderWidth',
      internalGroup: 'Layout',
    },
    {
      labelKey: 'settingItemHeaderWidth' as TranslationKey,
      type: 'number',
      internalID: 'SettingItemHeaderWidth',
      internalGroup: 'Layout',
    },
    {
      labelKey: 'settingItemHeight' as TranslationKey,
      type: 'number',
      internalID: 'SettingItemHeight',
      internalGroup: 'Layout',
    },
    {
      labelKey: 'settingItemMarginWidth' as TranslationKey,
      type: 'number',
      internalID: 'SettingItemMarginWidth',
      internalGroup: 'Layout',
    },
    {
      labelKey: 'settingHeaderHeight' as TranslationKey,
      type: 'number',
      internalID: 'SettingHeaderHeight',
      internalGroup: 'Layout',
    },
    {
      labelKey: 'playerControlHeight' as TranslationKey,
      type: 'number',
      internalID: 'PlayerControlHeight',
      internalGroup: 'Layout',
    },
    {
      labelKey: 'explorerHeaderHeight' as TranslationKey,
      type: 'number',
      internalID: 'ExplorerHeaderHeight',
      internalGroup: 'Layout',
    },
    {
      labelKey: 'explorerWindowNum' as TranslationKey,
      type: 'number',
      internalID: 'ExplorerWindowNum',
      internalGroup: 'Layout',
    },
    {
      labelKey: 'listItemHeight' as TranslationKey,
      type: 'number',
      internalID: 'ListItemHeight',
      internalGroup: 'Layout',
    },
    {
      labelKey: 'levelMeterWidth' as TranslationKey,
      type: 'number',
      internalID: 'LevelMeterWidth',
      internalGroup: 'Layout',
    },
  ];

  public static readonly formatItemsDef = [
    {
      labelKey: 'footerLeftFormat' as TranslationKey,
      type: 'text',
      internalID: 'FooterLeft',
      internalGroup: 'Format',
    },
    {
      labelKey: 'footerRightFormat' as TranslationKey,
      type: 'text',
      internalID: 'FooterRight',
      internalGroup: 'Format',
    },
  ];
}   